{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class UserService {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n  }\n  getAll() {\n    return this.http.get(this.baseUrl + 'user');\n  }\n  register(Name, Email, Password) {\n    return this.http.post(this.baseUrl + 'user/register', {\n      Name,\n      Email,\n      Password\n    }, httpOptions);\n  }\n  treeConstructor(strArr) {\n    return this.http.post(this.baseUrl + 'user/treeConstructor', {\n      strArr\n    }, httpOptions);\n  }\n  farthestNodes(strArr) {\n    return this.http.post(this.baseUrl + 'user/farthestNodes', {\n      strArr\n    }, httpOptions);\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAI9D,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIF,WAAW,CAAC;IAAE,cAAc,EAAE;EAAkB,CAAE;CAChE;AAKD,OAAM,MAAOG,WAAW;EAEtBC,YAAoBC,IAAgB,EAA8BC,OAAe;IAA7D,SAAI,GAAJD,IAAI;IAA0C,YAAO,GAAPC,OAAO;EAAY;EAErFC,MAAM;IACJ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,IAAI,CAACF,OAAO,GAAG,MAAM,CAAC;EACrD;EAEAG,QAAQ,CAACC,IAAY,EAAEC,KAAa,EAAEC,QAAgB;IACpD,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAM,IAAI,CAACP,OAAO,GAAG,eAAe,EAAE;MACzDI,IAAI;MACJC,KAAK;MACLC;KACD,EAAEX,WAAW,CAAC;EACjB;EAEAa,eAAe,CAACC,MAAW;IACzB,OAAO,IAAI,CAACV,IAAI,CAACQ,IAAI,CAAU,IAAI,CAACP,OAAO,GAAG,sBAAsB,EAAE;MAAES;IAAM,CAAE,EAAEd,WAAW,CAAC;EAChG;EAEAe,aAAa,CAACD,MAAgB;IAC5B,OAAO,IAAI,CAACV,IAAI,CAACQ,IAAI,CAAS,IAAI,CAACP,OAAO,GAAG,oBAAoB,EAAE;MAAES;IAAM,CAAE,EAAEd,WAAW,CAAC;EAC7F;;AAtBWE,WAAW;mBAAXA,WAAW,0CAEwB,UAAU;AAAA;AAF7CA,WAAW;SAAXA,WAAW;EAAAc,SAAXd,WAAW;EAAAe,YAFV;AAAM","names":["HttpHeaders","httpOptions","headers","UserService","constructor","http","baseUrl","getAll","get","register","Name","Email","Password","post","treeConstructor","strArr","farthestNodes","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Guillermo\\source\\repos\\PruebaTecnica_Operati\\PruebaTecnica_Operati\\ClientApp\\src\\app\\_service\\user.service.ts"],"sourcesContent":["import { Injectable, Inject } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User } from '../user'\r\nimport { Observable } from 'rxjs';\r\n\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string) { }\n\n  getAll(): Observable<User[]> {\n    return this.http.get<User[]>(this.baseUrl + 'user');\n  }\n\n  register(Name: string, Email: string, Password: string): Observable<any> {\n    return this.http.post<any>(this.baseUrl + 'user/register', {\n      Name,\n      Email,\n      Password\n    }, httpOptions);\n  }\n\n  treeConstructor(strArr: any): Observable<boolean> {\n    return this.http.post<boolean>(this.baseUrl + 'user/treeConstructor', { strArr }, httpOptions);\n  }\n\n  farthestNodes(strArr: string[]): Observable<number> {\n    return this.http.post<number>(this.baseUrl + 'user/farthestNodes', { strArr }, httpOptions);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}