{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class UserService {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n  }\n  register(name, email, password) {\n    return this.http.post(this.baseUrl + 'user/register', {\n      name,\n      email,\n      password\n    }, httpOptions);\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAI9D,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIF,WAAW,CAAC;IAAE,cAAc,EAAE;EAAkB,CAAE;CAChE;AAKD,OAAM,MAAOG,WAAW;EAEtBC,YAAoBC,IAAgB,EAA8BC,OAAe;IAA7D,SAAI,GAAJD,IAAI;IAA0C,YAAO,GAAPC,OAAO;EAAY;EAErFC,QAAQ,CAACC,IAAY,EAAEC,KAAa,EAAEC,QAAgB;IACpD,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,IAAI,CAACL,OAAO,GAAG,eAAe,EAAE;MACpDE,IAAI;MACJC,KAAK;MACLC;KACD,EAAET,WAAW,CAAC;EACjB;;AAVWE,WAAW;mBAAXA,WAAW,0CAEwB,UAAU;AAAA;AAF7CA,WAAW;SAAXA,WAAW;EAAAS,SAAXT,WAAW;EAAAU,YAFV;AAAM","names":["HttpHeaders","httpOptions","headers","UserService","constructor","http","baseUrl","register","name","email","password","post","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Guillermo\\source\\repos\\PruebaTecnica_Operati\\PruebaTecnica_Operati\\ClientApp\\src\\app\\_service\\user.service.ts"],"sourcesContent":["import { Injectable, Inject } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User } from '../user'\r\nimport { Observable } from 'rxjs';\r\n\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string) { }\n\n  register(name: string, email: string, password: string): Observable<any> {\n    return this.http.post(this.baseUrl + 'user/register', {\n      name,\n      email,\n      password\n    }, httpOptions);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}