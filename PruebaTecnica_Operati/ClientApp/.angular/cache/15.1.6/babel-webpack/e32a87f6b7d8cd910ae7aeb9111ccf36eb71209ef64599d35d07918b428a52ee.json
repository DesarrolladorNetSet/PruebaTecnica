{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nlet AuthenticationService = class AuthenticationService {\n  constructor(http, envUrl) {\n    this.http = http;\n    this.envUrl = envUrl;\n    this.APIUrl = \"http://localhost:5000/api\";\n    this.registerUser = (route, body) => {\n      return this.http.post(this.createCompleteRoute(route, this.envUrl.urlAddress), body);\n    };\n    this.createCompleteRoute = (route, envAddress) => {\n      return `${envAddress}/${route}`;\n    };\n  }\n};\nAuthenticationService = __decorate([Injectable({\n  providedIn: 'root'\n})], AuthenticationService);\nexport { AuthenticationService };","map":{"version":3,"mappings":";AAGA,SAASA,UAAU,QAAQ,eAAe;AAKnC,IAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAEhCC,YAAoBC,IAAgB,EAAUC,MAAc;IAAxC,SAAI,GAAJD,IAAI;IAAsB,WAAM,GAANC,MAAM;IAD3C,WAAM,GAAG,2BAA2B;IAEtC,iBAAY,GAAG,CAACC,KAAa,EAAEC,IAAqB,KAAI;MAC7D,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAc,IAAI,CAACC,mBAAmB,CAACH,KAAK,EAAE,IAAI,CAACD,MAAM,CAACK,UAAU,CAAC,EAAEH,IAAI,CAAC;IACnG,CAAC;IACO,wBAAmB,GAAG,CAACD,KAAa,EAAEK,UAAkB,KAAI;MAClE,OAAO,GAAGA,UAAU,IAAIL,KAAK,EAAE;IACjC,CAAC;EAN+D;CAOjE;AATYJ,qBAAqB,eAHjCD,UAAU,CAAC;EACVW,UAAU,EAAE;CACb,CAAC,GACWV,qBAAqB,CASjC;SATYA,qBAAqB","names":["Injectable","AuthenticationService","constructor","http","envUrl","route","body","post","createCompleteRoute","urlAddress","envAddress","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Guillermo\\source\\repos\\PruebaTecnica_Operati\\PruebaTecnica_Operati\\ClientApp\\src\\app\\shared\\services\\authentication.service.ts"],"sourcesContent":["import { RegistrationDto } from '../../../interfaces/registrationDto';\nimport { ResponseDto } from '../../../interfaces/ResponseDto';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { EnvironmentUrlService } from './environment-url.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  readonly APIUrl = \"http://localhost:5000/api\";\n  constructor(private http: HttpClient, private envUrl: APIUrl) { }\n  public registerUser = (route: string, body: RegistrationDto) => {\n    return this.http.post<ResponseDto>(this.createCompleteRoute(route, this.envUrl.urlAddress), body);\n  }\n  private createCompleteRoute = (route: string, envAddress: string) => {\n    return `${envAddress}/${route}`;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}